name: Meson Build System

# Basically, only rebuilds and tests the project when C++ is changed
# Commented out to facilitate testing
on:
  push:
    # paths:
    #   - "**.cpp"
    #   - "**.h"
  pull_request:
    # paths:
    #   - "**.cpp"
    #   - "**.h"
  workflow_dispatch:

jobs:
  build-on-windows:
    name: Build and Test on Windows with Meson  
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      # I need to find a better place to put this `ci_requirements.txt` file.
      # Right now, it is just in the project root.
      - name: Install Dependencies with Python Pip
        run: pip install -r ci_requirements.txt

      - name: Setup and Build Meson Project on Windows
        run: | 
          cd xplane_plugin/
          meson setup build
          meson compile -C build
      - name: Test the Meson Project
        run: |
          cd xplane_plugin/
          ./build/testsuite --verbose~

      # if tests fail, upload a test log?
      #- name: Upload Test Log
      #  uses: actions/upload-artifact@v4
      #  if: failure()
      #  with:
      #    name: Windows_Meson_Testlog
      #    path: builddir/meson-logs/testlog.txt


  # build-on-ubuntu:
  #   name: Build and Test on Ubuntu with Meson
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     # This is a github actions workflow that sets up mingw on the computer. This may be out of date so be cautious
  #     - name: Set up MinGW
  #       uses: egor-tensin/setup-mingw@v2
  #       with:
  #         platform: x64

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.x'
  #     # I need to find a better place to put this `ci_requirements.txt` file.
  #     # Right now, it is just in the project root.
  #     - name: Install Dependencies with Python Pip
  #       run: pip install -r ci_requirements.txt
  #     - name: Download XPlane SDK using Ubuntu Bash Script
  #       run: ./utils/init.sh

  #     - name: Cross-Compile Meson Project for Windows on Ubuntu
  #       run: | 
  #         meson setup --cross-file win.ini build
  #         meson compile -C build
  #     - name: Test the Meson Project
  #       run: ./build/testsuite --verbose~

      # if tests fail, upload a test log?
      #- name: Upload Test Log
      #  uses: actions/upload-artifact@v4
      #  if: failure()
      #  with:
      #    name: MacOS_Meson_Testlog
      #    path: builddir/meson-logs/testlog.txt